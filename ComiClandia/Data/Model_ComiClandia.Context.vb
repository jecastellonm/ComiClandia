'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class ComiClandiaEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=ComiClandiaEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Cliente() As DbSet(Of Cliente)
    Public Overridable Property Producto() As DbSet(Of Producto)
    Public Overridable Property sysdiagrams() As DbSet(Of sysdiagrams)
    Public Overridable Property Pedido() As DbSet(Of Pedido)
    Public Overridable Property DetallePedido() As DbSet(Of DetallePedido)

    Public Overridable Function CreateEditCliente(clienteId As Nullable(Of Integer), nombre As String, identificacion As String, direccion As String, telefono As String, ciudad As String) As ObjectResult(Of Cliente)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim identificacionParameter As ObjectParameter = If(identificacion IsNot Nothing, New ObjectParameter("Identificacion", identificacion), New ObjectParameter("Identificacion", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim ciudadParameter As ObjectParameter = If(ciudad IsNot Nothing, New ObjectParameter("Ciudad", ciudad), New ObjectParameter("Ciudad", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Cliente)("CreateEditCliente", clienteIdParameter, nombreParameter, identificacionParameter, direccionParameter, telefonoParameter, ciudadParameter)
    End Function

    Public Overridable Function CreateEditCliente(clienteId As Nullable(Of Integer), nombre As String, identificacion As String, direccion As String, telefono As String, ciudad As String, mergeOption As MergeOption) As ObjectResult(Of Cliente)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim identificacionParameter As ObjectParameter = If(identificacion IsNot Nothing, New ObjectParameter("Identificacion", identificacion), New ObjectParameter("Identificacion", GetType(String)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("Direccion", direccion), New ObjectParameter("Direccion", GetType(String)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim ciudadParameter As ObjectParameter = If(ciudad IsNot Nothing, New ObjectParameter("Ciudad", ciudad), New ObjectParameter("Ciudad", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Cliente)("CreateEditCliente", mergeOption, clienteIdParameter, nombreParameter, identificacionParameter, direccionParameter, telefonoParameter, ciudadParameter)
    End Function

    Public Overridable Function CreateEditDetallePedido(detallePedidoId As Nullable(Of Integer), idProducto As Nullable(Of Integer), idPedido As Nullable(Of Integer), cantidad As Nullable(Of Integer)) As Integer
        Dim detallePedidoIdParameter As ObjectParameter = If(detallePedidoId.HasValue, New ObjectParameter("DetallePedidoId", detallePedidoId), New ObjectParameter("DetallePedidoId", GetType(Integer)))

        Dim idProductoParameter As ObjectParameter = If(idProducto.HasValue, New ObjectParameter("IdProducto", idProducto), New ObjectParameter("IdProducto", GetType(Integer)))

        Dim idPedidoParameter As ObjectParameter = If(idPedido.HasValue, New ObjectParameter("IdPedido", idPedido), New ObjectParameter("IdPedido", GetType(Integer)))

        Dim cantidadParameter As ObjectParameter = If(cantidad.HasValue, New ObjectParameter("Cantidad", cantidad), New ObjectParameter("Cantidad", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("CreateEditDetallePedido", detallePedidoIdParameter, idProductoParameter, idPedidoParameter, cantidadParameter)
    End Function

    Public Overridable Function CreateEditPedido(pedidoId As Nullable(Of Integer), idCliente As Nullable(Of Integer)) As Integer
        Dim pedidoIdParameter As ObjectParameter = If(pedidoId.HasValue, New ObjectParameter("PedidoId", pedidoId), New ObjectParameter("PedidoId", GetType(Integer)))

        Dim idClienteParameter As ObjectParameter = If(idCliente.HasValue, New ObjectParameter("IdCliente", idCliente), New ObjectParameter("IdCliente", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("CreateEditPedido", pedidoIdParameter, idClienteParameter)
    End Function

    Public Overridable Function CreateEditProducto(productoId As Nullable(Of Integer), nombre As String, descripcion As String, stock As Nullable(Of Integer), valor As Nullable(Of Integer), departamento As Nullable(Of Integer)) As ObjectResult(Of Producto)
        Dim productoIdParameter As ObjectParameter = If(productoId.HasValue, New ObjectParameter("ProductoId", productoId), New ObjectParameter("ProductoId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim stockParameter As ObjectParameter = If(stock.HasValue, New ObjectParameter("Stock", stock), New ObjectParameter("Stock", GetType(Integer)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("Valor", valor), New ObjectParameter("Valor", GetType(Integer)))

        Dim departamentoParameter As ObjectParameter = If(departamento.HasValue, New ObjectParameter("Departamento", departamento), New ObjectParameter("Departamento", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Producto)("CreateEditProducto", productoIdParameter, nombreParameter, descripcionParameter, stockParameter, valorParameter, departamentoParameter)
    End Function

    Public Overridable Function CreateEditProducto(productoId As Nullable(Of Integer), nombre As String, descripcion As String, stock As Nullable(Of Integer), valor As Nullable(Of Integer), departamento As Nullable(Of Integer), mergeOption As MergeOption) As ObjectResult(Of Producto)
        Dim productoIdParameter As ObjectParameter = If(productoId.HasValue, New ObjectParameter("ProductoId", productoId), New ObjectParameter("ProductoId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim descripcionParameter As ObjectParameter = If(descripcion IsNot Nothing, New ObjectParameter("Descripcion", descripcion), New ObjectParameter("Descripcion", GetType(String)))

        Dim stockParameter As ObjectParameter = If(stock.HasValue, New ObjectParameter("Stock", stock), New ObjectParameter("Stock", GetType(Integer)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("Valor", valor), New ObjectParameter("Valor", GetType(Integer)))

        Dim departamentoParameter As ObjectParameter = If(departamento.HasValue, New ObjectParameter("Departamento", departamento), New ObjectParameter("Departamento", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Producto)("CreateEditProducto", mergeOption, productoIdParameter, nombreParameter, descripcionParameter, stockParameter, valorParameter, departamentoParameter)
    End Function

End Class
